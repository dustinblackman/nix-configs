{
  "type": "Chunk",
  "body": [
    {
      "type": "LocalStatement",
      "variables": [
        {
          "type": "Identifier",
          "name": "execute"
        }
      ],
      "init": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_command"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ]
    },
    {
      "type": "LocalStatement",
      "variables": [
        {
          "type": "Identifier",
          "name": "fn"
        }
      ],
      "init": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "fn"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        }
      ]
    },
    {
      "type": "LocalStatement",
      "variables": [
        {
          "type": "Identifier",
          "name": "install_path"
        }
      ],
      "init": [
        {
          "type": "BinaryExpression",
          "operator": "..",
          "left": {
            "type": "CallExpression",
            "base": {
              "type": "MemberExpression",
              "indexer": ".",
              "identifier": {
                "type": "Identifier",
                "name": "stdpath"
              },
              "base": {
                "type": "Identifier",
                "name": "fn"
              }
            },
            "arguments": [
              {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"data\""
              }
            ]
          },
          "right": {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"/site/pack/packer/start/packer.nvim\""
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "clauses": [
        {
          "type": "IfClause",
          "condition": {
            "type": "BinaryExpression",
            "operator": ">",
            "left": {
              "type": "CallExpression",
              "base": {
                "type": "MemberExpression",
                "indexer": ".",
                "identifier": {
                  "type": "Identifier",
                  "name": "empty"
                },
                "base": {
                  "type": "Identifier",
                  "name": "fn"
                }
              },
              "arguments": [
                {
                  "type": "CallExpression",
                  "base": {
                    "type": "MemberExpression",
                    "indexer": ".",
                    "identifier": {
                      "type": "Identifier",
                      "name": "glob"
                    },
                    "base": {
                      "type": "Identifier",
                      "name": "fn"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "install_path"
                    }
                  ]
                }
              ]
            },
            "right": {
              "type": "NumericLiteral",
              "value": 0,
              "raw": "0"
            }
          },
          "body": [
            {
              "type": "CallStatement",
              "expression": {
                "type": "CallExpression",
                "base": {
                  "type": "MemberExpression",
                  "indexer": ".",
                  "identifier": {
                    "type": "Identifier",
                    "name": "system"
                  },
                  "base": {
                    "type": "Identifier",
                    "name": "fn"
                  }
                },
                "arguments": [
                  {
                    "type": "TableConstructorExpression",
                    "fields": [
                      {
                        "type": "TableValue",
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"git\""
                        }
                      },
                      {
                        "type": "TableValue",
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"clone\""
                        }
                      },
                      {
                        "type": "TableValue",
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"https://github.com/wbthomason/packer.nvim\""
                        }
                      },
                      {
                        "type": "TableValue",
                        "value": {
                          "type": "Identifier",
                          "name": "install_path"
                        }
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "CallStatement",
              "expression": {
                "type": "StringCallExpression",
                "base": {
                  "type": "Identifier",
                  "name": "execute"
                },
                "argument": {
                  "type": "StringLiteral",
                  "value": null,
                  "raw": "\"packadd packer.nvim\""
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "polyglot_disabled"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "TableConstructorExpression",
          "fields": [
            {
              "type": "TableValue",
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"rust\""
              }
            },
            {
              "type": "TableValue",
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"ruby\""
              }
            },
            {
              "type": "TableValue",
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"javascript\""
              }
            },
            {
              "type": "TableValue",
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"json\""
              }
            },
            {
              "type": "TableValue",
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"html\""
              }
            },
            {
              "type": "TableValue",
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"jsx\""
              }
            },
            {
              "type": "TableValue",
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"scss\""
              }
            },
            {
              "type": "TableValue",
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"typescript\""
              }
            },
            {
              "type": "TableValue",
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vue\""
              }
            },
            {
              "type": "TableValue",
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"markdown\""
              }
            }
          ]
        }
      ]
    },
    {
      "type": "LocalStatement",
      "variables": [
        {
          "type": "Identifier",
          "name": "packer_commits"
        }
      ],
      "init": [
        {
          "type": "TableConstructorExpression",
          "fields": [
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "ale"
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"bee8eccb421968d1f2628c15e9f2bfcc3d0418aa\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"auto-pairs\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"39f06b873a8449af8ff6a3eee716d3da14d63a76\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"base16-vim\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"6191622d5806d4448fa2285047936bdcee57a098\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"coc.nvim\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"7cfbd335ceefc0103ff3cbd39b2b4abf353f70be\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"ctrlsf.vim\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"c90632e6a27bfd525a2a4c6e108981d4558202c0\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"echodoc.vim\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"7dc1d45d7ffd275c06bf207795cf071ae6c9f1a4\""
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "fzf"
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"3f75a8369f63f2bd6ac3686fc5d88f2bc128e610\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"fzf.vim\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"a88311b222eb9f90fa9fa72292e61d15c6767866\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"incsearch-easymotion.vim\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"fcdd3aee6f4c0eef1a515727199ece8d6c6041b5\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"incsearch.vim\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"25e2547fb0566460f5999024f7a0de7b3775201f\""
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "indentLine"
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"5617a1cf7d315e6e6f84d825c85e3b669d220bfa\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"markdown-preview.nvim\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"e5bfe9b89dc9c2fbd24ed0f0596c85fd0568b143\""
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "nerdcommenter"
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"ab475e1325ad6eaec15a3113f201a4e4a3ee2811\""
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "nerdtree"
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"81f3eaba295b3fceb2d032db57e5eae99ae480f8\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"packer.nvim\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"af1a46466c5752b9d1953fb508d2544473f4821e\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"rust.vim\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"87c745d8d506fc1eecc1d81df15d5bde1658a2fc\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"split-term.vim\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"a4e28cab77ad07fc8a0ebb62a982768c02eb287c\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vCoolor.vim\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"bc19d684af09b1e146cf72176eea1ecded84882c\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-airline\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"ab4962b83866e181b989cb550c527cbfa327942c\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-airline-themes\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"571a9308c0aed6a690f25194461b2eada81f6b57\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-bufkill\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"2bd6d7e791668ea52bb26be2639406fcf617271f\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-closetag\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"c0779ef575d5c239162f4ca3506cfb4a95d45a58\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-css-color\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"fce515d173d8d9bbf279e1fefea5eacd6be98be8\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-devicons\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"4c2df59e37b6680e0ec17b543b11a405dc40262c\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-easymotion\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"d75d9591e415652b25d9e0a3669355550325263d\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-fugitive\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"0868c30cc08a4cf49b5f43e08412c671b19fa3f0\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-gitgutter\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"f4bdaa4e9cf07f62ce1161a3d0ff70c8aad25bc5\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-indexed-search\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"5af020bba084b699d0453f242d7d76711d64b1e3\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-javascript\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"585ad542834fd3d9e47e0ef59abafd69c696c80d\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-json\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"3727f089410e23ae113be6222e8a08dd2613ecf2\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-jsx-pretty\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"6989f1663cc03d7da72b5ef1c03f87e6ddb70b41\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-markdown\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"772de97c97d37e5e22d7bd6884b17b858a687bc2\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-multiple-cursors\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"6456718e1d30b42c04b920c5413ca44f68f08759\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-nerdtree-syntax-highlight\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"5178ee4d7f4e7761187df30bb709f703d91df18a\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-nerdtree-tabs\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"07d19f0299762669c6f93fbadb8249da6ba9de62\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-polyglot\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"730dcb02caab60a6ae5d8b4bdc16d290041061ec\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-rails\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"e2c72b5cfb6a4e07e70806198c1ff491a6077fa8\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-rhubarb\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"2590324d7fdaf0c6311fad4ee2a2878acaaec42d\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-tmux-focus-events\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"b1330e04ffb95ede8e02b2f7df1f238190c67056\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-tmux-navigator\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"6a1e58c3ca3bc7acca36c90521b3dfae83b2a602\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-trailing-whitespace\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"05f068ebd9dbdf71d2d334d02abd99deb0311c40\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-unstack\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"9b191419b4d3f26225a5ae3df5e409c62b426941\""
              }
            },
            {
              "type": "TableKey",
              "key": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"vim-windowswap\""
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"15db3f697aa1fa696d99fcdc920c90cd2cec855e\""
              }
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "MemberExpression",
        "indexer": ".",
        "identifier": {
          "type": "Identifier",
          "name": "packer_snapshot"
        },
        "base": {
          "type": "Identifier",
          "name": "_G"
        }
      },
      "isLocal": false,
      "parameters": [],
      "body": [
        {
          "type": "LocalStatement",
          "variables": [
            {
              "type": "Identifier",
              "name": "index"
            }
          ],
          "init": [
            {
              "type": "TableConstructorExpression",
              "fields": []
            }
          ]
        },
        {
          "type": "ForGenericStatement",
          "variables": [
            {
              "type": "Identifier",
              "name": "name"
            },
            {
              "type": "Identifier",
              "name": "v"
            }
          ],
          "iterators": [
            {
              "type": "CallExpression",
              "base": {
                "type": "Identifier",
                "name": "pairs"
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "packer_plugins"
                }
              ]
            }
          ],
          "body": [
            {
              "type": "LocalStatement",
              "variables": [
                {
                  "type": "Identifier",
                  "name": "handle"
                }
              ],
              "init": [
                {
                  "type": "CallExpression",
                  "base": {
                    "type": "MemberExpression",
                    "indexer": ".",
                    "identifier": {
                      "type": "Identifier",
                      "name": "popen"
                    },
                    "base": {
                      "type": "Identifier",
                      "name": "io"
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "operator": "..",
                      "left": {
                        "type": "StringLiteral",
                        "value": null,
                        "raw": "\"cd \""
                      },
                      "right": {
                        "type": "BinaryExpression",
                        "operator": "..",
                        "left": {
                          "type": "MemberExpression",
                          "indexer": ".",
                          "identifier": {
                            "type": "Identifier",
                            "name": "path"
                          },
                          "base": {
                            "type": "Identifier",
                            "name": "v"
                          }
                        },
                        "right": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\" && git rev-parse HEAD\""
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "type": "LocalStatement",
              "variables": [
                {
                  "type": "Identifier",
                  "name": "commit"
                }
              ],
              "init": [
                {
                  "type": "CallExpression",
                  "base": {
                    "type": "MemberExpression",
                    "indexer": ":",
                    "identifier": {
                      "type": "Identifier",
                      "name": "read"
                    },
                    "base": {
                      "type": "Identifier",
                      "name": "handle"
                    }
                  },
                  "arguments": [
                    {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"*a\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "CallStatement",
              "expression": {
                "type": "CallExpression",
                "base": {
                  "type": "MemberExpression",
                  "indexer": ":",
                  "identifier": {
                    "type": "Identifier",
                    "name": "close"
                  },
                  "base": {
                    "type": "Identifier",
                    "name": "handle"
                  }
                },
                "arguments": []
              }
            },
            {
              "type": "AssignmentStatement",
              "variables": [
                {
                  "type": "IndexExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "index"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "name"
                  }
                }
              ],
              "init": [
                {
                  "type": "CallExpression",
                  "base": {
                    "type": "MemberExpression",
                    "indexer": ".",
                    "identifier": {
                      "type": "Identifier",
                      "name": "gsub"
                    },
                    "base": {
                      "type": "Identifier",
                      "name": "string"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "commit"
                    },
                    {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"%s+\""
                    },
                    {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"\""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "LocalStatement",
          "variables": [
            {
              "type": "Identifier",
              "name": "tmp_path"
            }
          ],
          "init": [
            {
              "type": "BinaryExpression",
              "operator": "..",
              "left": {
                "type": "CallExpression",
                "base": {
                  "type": "MemberExpression",
                  "indexer": ".",
                  "identifier": {
                    "type": "Identifier",
                    "name": "tmpname"
                  },
                  "base": {
                    "type": "Identifier",
                    "name": "os"
                  }
                },
                "arguments": []
              },
              "right": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\".lua\""
              }
            }
          ]
        },
        {
          "type": "LocalStatement",
          "variables": [
            {
              "type": "Identifier",
              "name": "tmp_file"
            }
          ],
          "init": [
            {
              "type": "CallExpression",
              "base": {
                "type": "MemberExpression",
                "indexer": ".",
                "identifier": {
                  "type": "Identifier",
                  "name": "open"
                },
                "base": {
                  "type": "Identifier",
                  "name": "io"
                }
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "tmp_path"
                },
                {
                  "type": "StringLiteral",
                  "value": null,
                  "raw": "\"a\""
                }
              ]
            }
          ]
        },
        {
          "type": "CallStatement",
          "expression": {
            "type": "CallExpression",
            "base": {
              "type": "MemberExpression",
              "indexer": ":",
              "identifier": {
                "type": "Identifier",
                "name": "write"
              },
              "base": {
                "type": "Identifier",
                "name": "tmp_file"
              }
            },
            "arguments": [
              {
                "type": "BinaryExpression",
                "operator": "..",
                "left": {
                  "type": "StringLiteral",
                  "value": null,
                  "raw": "\"local packer_commits = \""
                },
                "right": {
                  "type": "CallExpression",
                  "base": {
                    "type": "MemberExpression",
                    "indexer": ".",
                    "identifier": {
                      "type": "Identifier",
                      "name": "inspect"
                    },
                    "base": {
                      "type": "Identifier",
                      "name": "vim"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "index"
                    }
                  ]
                }
              },
              {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"\\n\""
              }
            ]
          }
        },
        {
          "type": "CallStatement",
          "expression": {
            "type": "CallExpression",
            "base": {
              "type": "MemberExpression",
              "indexer": ":",
              "identifier": {
                "type": "Identifier",
                "name": "close"
              },
              "base": {
                "type": "Identifier",
                "name": "tmp_file"
              }
            },
            "arguments": []
          }
        },
        {
          "type": "CallStatement",
          "expression": {
            "type": "CallExpression",
            "base": {
              "type": "MemberExpression",
              "indexer": ".",
              "identifier": {
                "type": "Identifier",
                "name": "cmd"
              },
              "base": {
                "type": "Identifier",
                "name": "vim"
              }
            },
            "arguments": [
              {
                "type": "BinaryExpression",
                "operator": "..",
                "left": {
                  "type": "StringLiteral",
                  "value": null,
                  "raw": "\":tabnew \""
                },
                "right": {
                  "type": "Identifier",
                  "name": "tmp_path"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"command PackerSnapshot :call v:lua.packer_snapshot()\""
          }
        ]
      }
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "name": "split"
      },
      "isLocal": false,
      "parameters": [
        {
          "type": "Identifier",
          "name": "s"
        },
        {
          "type": "Identifier",
          "name": "delimiter"
        }
      ],
      "body": [
        {
          "type": "AssignmentStatement",
          "variables": [
            {
              "type": "Identifier",
              "name": "result"
            }
          ],
          "init": [
            {
              "type": "TableConstructorExpression",
              "fields": []
            }
          ]
        },
        {
          "type": "ForGenericStatement",
          "variables": [
            {
              "type": "Identifier",
              "name": "match"
            }
          ],
          "iterators": [
            {
              "type": "CallExpression",
              "base": {
                "type": "MemberExpression",
                "indexer": ":",
                "identifier": {
                  "type": "Identifier",
                  "name": "gmatch"
                },
                "base": {
                  "type": "BinaryExpression",
                  "operator": "..",
                  "left": {
                    "type": "Identifier",
                    "name": "s"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "delimiter"
                  }
                }
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "operator": "..",
                  "left": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"(.-)\""
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "delimiter"
                  }
                }
              ]
            }
          ],
          "body": [
            {
              "type": "CallStatement",
              "expression": {
                "type": "CallExpression",
                "base": {
                  "type": "MemberExpression",
                  "indexer": ".",
                  "identifier": {
                    "type": "Identifier",
                    "name": "insert"
                  },
                  "base": {
                    "type": "Identifier",
                    "name": "table"
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "result"
                  },
                  {
                    "type": "Identifier",
                    "name": "match"
                  }
                ]
              }
            }
          ]
        },
        {
          "type": "ReturnStatement",
          "arguments": [
            {
              "type": "Identifier",
              "name": "result"
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "name": "packer_use_wrapper"
      },
      "isLocal": true,
      "parameters": [
        {
          "type": "Identifier",
          "name": "use"
        }
      ],
      "body": [
        {
          "type": "FunctionDeclaration",
          "identifier": {
            "type": "Identifier",
            "name": "packer_use"
          },
          "isLocal": false,
          "parameters": [
            {
              "type": "Identifier",
              "name": "e"
            }
          ],
          "body": [
            {
              "type": "IfStatement",
              "clauses": [
                {
                  "type": "IfClause",
                  "condition": {
                    "type": "BinaryExpression",
                    "operator": "==",
                    "left": {
                      "type": "CallExpression",
                      "base": {
                        "type": "Identifier",
                        "name": "type"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "e"
                        }
                      ]
                    },
                    "right": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"string\""
                    }
                  },
                  "body": [
                    {
                      "type": "AssignmentStatement",
                      "variables": [
                        {
                          "type": "Identifier",
                          "name": "e"
                        }
                      ],
                      "init": [
                        {
                          "type": "TableConstructorExpression",
                          "fields": [
                            {
                              "type": "TableValue",
                              "value": {
                                "type": "Identifier",
                                "name": "e"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "LocalStatement",
              "variables": [
                {
                  "type": "Identifier",
                  "name": "name"
                }
              ],
              "init": [
                {
                  "type": "IndexExpression",
                  "base": {
                    "type": "CallExpression",
                    "base": {
                      "type": "Identifier",
                      "name": "split"
                    },
                    "arguments": [
                      {
                        "type": "IndexExpression",
                        "base": {
                          "type": "Identifier",
                          "name": "e"
                        },
                        "index": {
                          "type": "NumericLiteral",
                          "value": 1,
                          "raw": "1"
                        }
                      },
                      {
                        "type": "StringLiteral",
                        "value": null,
                        "raw": "\"/\""
                      }
                    ]
                  },
                  "index": {
                    "type": "NumericLiteral",
                    "value": 2,
                    "raw": "2"
                  }
                }
              ]
            },
            {
              "type": "IfStatement",
              "clauses": [
                {
                  "type": "IfClause",
                  "condition": {
                    "type": "BinaryExpression",
                    "operator": "==",
                    "left": {
                      "type": "IndexExpression",
                      "base": {
                        "type": "Identifier",
                        "name": "packer_commits"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "name"
                      }
                    },
                    "right": {
                      "type": "NilLiteral",
                      "value": null,
                      "raw": "nil"
                    }
                  },
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "base": {
                            "type": "Identifier",
                            "name": "use"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "e"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "AssignmentStatement",
              "variables": [
                {
                  "type": "MemberExpression",
                  "indexer": ".",
                  "identifier": {
                    "type": "Identifier",
                    "name": "commit"
                  },
                  "base": {
                    "type": "Identifier",
                    "name": "e"
                  }
                }
              ],
              "init": [
                {
                  "type": "IndexExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "packer_commits"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "name"
                  }
                }
              ]
            },
            {
              "type": "ReturnStatement",
              "arguments": [
                {
                  "type": "CallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "e"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "ReturnStatement",
          "arguments": [
            {
              "type": "Identifier",
              "name": "packer_use"
            }
          ]
        }
      ]
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "startup"
          },
          "base": {
            "type": "CallExpression",
            "base": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"packer\""
              }
            ]
          }
        },
        "arguments": [
          {
            "type": "FunctionDeclaration",
            "identifier": null,
            "isLocal": false,
            "parameters": [
              {
                "type": "Identifier",
                "name": "use"
              }
            ],
            "body": [
              {
                "type": "LocalStatement",
                "variables": [
                  {
                    "type": "Identifier",
                    "name": "use"
                  }
                ],
                "init": [
                  {
                    "type": "CallExpression",
                    "base": {
                      "type": "Identifier",
                      "name": "packer_use_wrapper"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "use"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"wbthomason/packer.nvim\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"w0rp/ale\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"tpope/vim-fugitive\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"tpope/vim-rhubarb\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"vim-airline/vim-airline\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"airblade/vim-gitgutter\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"vimlab/split-term.vim\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"scrooloose/nerdtree\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "TableCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "arguments": {
                    "type": "TableConstructorExpression",
                    "fields": [
                      {
                        "type": "TableValue",
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"junegunn/fzf\""
                        }
                      },
                      {
                        "type": "TableKeyString",
                        "key": {
                          "type": "Identifier",
                          "name": "run"
                        },
                        "value": {
                          "type": "FunctionDeclaration",
                          "identifier": null,
                          "isLocal": false,
                          "parameters": [],
                          "body": [
                            {
                              "type": "CallStatement",
                              "expression": {
                                "type": "CallExpression",
                                "base": {
                                  "type": "IndexExpression",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "fn"
                                  },
                                  "index": {
                                    "type": "StringLiteral",
                                    "value": null,
                                    "raw": "\"fzf#install\""
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "NumericLiteral",
                                    "value": 0,
                                    "raw": "0"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"junegunn/fzf.vim\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"tiagofumo/vim-nerdtree-syntax-highlight\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"terryma/vim-multiple-cursors\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"jiangmiao/auto-pairs\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"jistr/vim-nerdtree-tabs\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"Yggdroot/indentLine\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"bronson/vim-trailing-whitespace\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"easymotion/vim-easymotion\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"haya14busa/incsearch.vim\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"haya14busa/incsearch-easymotion.vim\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"scrooloose/nerdcommenter\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"dyng/ctrlsf.vim\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"KabbAmine/vCoolor.vim\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"henrik/vim-indexed-search\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"wesQ3/vim-windowswap\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"alvan/vim-closetag\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"Shougo/echodoc.vim\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"christoomey/vim-tmux-navigator\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"tmux-plugins/vim-tmux-focus-events\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"mattboehm/vim-unstack\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"qpkorr/vim-bufkill\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "TableCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "arguments": {
                    "type": "TableConstructorExpression",
                    "fields": [
                      {
                        "type": "TableValue",
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"iamcco/markdown-preview.nvim\""
                        }
                      },
                      {
                        "type": "TableKeyString",
                        "key": {
                          "type": "Identifier",
                          "name": "run"
                        },
                        "value": {
                          "type": "FunctionDeclaration",
                          "identifier": null,
                          "isLocal": false,
                          "parameters": [],
                          "body": [
                            {
                              "type": "CallStatement",
                              "expression": {
                                "type": "CallExpression",
                                "base": {
                                  "type": "IndexExpression",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "fn"
                                  },
                                  "index": {
                                    "type": "StringLiteral",
                                    "value": null,
                                    "raw": "\"mkdp#util#install\""
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "NumericLiteral",
                                    "value": 0,
                                    "raw": "0"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "TableCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "arguments": {
                    "type": "TableConstructorExpression",
                    "fields": [
                      {
                        "type": "TableValue",
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"rust-lang/rust.vim\""
                        }
                      },
                      {
                        "type": "TableKeyString",
                        "key": {
                          "type": "Identifier",
                          "name": "ft"
                        },
                        "value": {
                          "type": "TableConstructorExpression",
                          "fields": [
                            {
                              "type": "TableValue",
                              "value": {
                                "type": "StringLiteral",
                                "value": null,
                                "raw": "\"rust\""
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "TableCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "arguments": {
                    "type": "TableConstructorExpression",
                    "fields": [
                      {
                        "type": "TableValue",
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"tpope/vim-rails\""
                        }
                      },
                      {
                        "type": "TableKeyString",
                        "key": {
                          "type": "Identifier",
                          "name": "ft"
                        },
                        "value": {
                          "type": "TableConstructorExpression",
                          "fields": [
                            {
                              "type": "TableValue",
                              "value": {
                                "type": "StringLiteral",
                                "value": null,
                                "raw": "\"ruby\""
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "TableCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "arguments": {
                    "type": "TableConstructorExpression",
                    "fields": [
                      {
                        "type": "TableValue",
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"pangloss/vim-javascript\""
                        }
                      },
                      {
                        "type": "TableKeyString",
                        "key": {
                          "type": "Identifier",
                          "name": "ft"
                        },
                        "value": {
                          "type": "TableConstructorExpression",
                          "fields": [
                            {
                              "type": "TableValue",
                              "value": {
                                "type": "StringLiteral",
                                "value": null,
                                "raw": "\"typescript\""
                              }
                            },
                            {
                              "type": "TableValue",
                              "value": {
                                "type": "StringLiteral",
                                "value": null,
                                "raw": "\"html\""
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "TableCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "arguments": {
                    "type": "TableConstructorExpression",
                    "fields": [
                      {
                        "type": "TableValue",
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"maxmellon/vim-jsx-pretty\""
                        }
                      },
                      {
                        "type": "TableKeyString",
                        "key": {
                          "type": "Identifier",
                          "name": "ft"
                        },
                        "value": {
                          "type": "TableConstructorExpression",
                          "fields": [
                            {
                              "type": "TableValue",
                              "value": {
                                "type": "StringLiteral",
                                "value": null,
                                "raw": "\"jsx\""
                              }
                            },
                            {
                              "type": "TableValue",
                              "value": {
                                "type": "StringLiteral",
                                "value": null,
                                "raw": "\"tsx\""
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "TableCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "arguments": {
                    "type": "TableConstructorExpression",
                    "fields": [
                      {
                        "type": "TableValue",
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"elzr/vim-json\""
                        }
                      },
                      {
                        "type": "TableKeyString",
                        "key": {
                          "type": "Identifier",
                          "name": "ft"
                        },
                        "value": {
                          "type": "TableConstructorExpression",
                          "fields": [
                            {
                              "type": "TableValue",
                              "value": {
                                "type": "StringLiteral",
                                "value": null,
                                "raw": "\"json\""
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "TableCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "arguments": {
                    "type": "TableConstructorExpression",
                    "fields": [
                      {
                        "type": "TableValue",
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"gabrielelana/vim-markdown\""
                        }
                      },
                      {
                        "type": "TableKeyString",
                        "key": {
                          "type": "Identifier",
                          "name": "ft"
                        },
                        "value": {
                          "type": "TableConstructorExpression",
                          "fields": [
                            {
                              "type": "TableValue",
                              "value": {
                                "type": "StringLiteral",
                                "value": null,
                                "raw": "\"markdown\""
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"sheerun/vim-polyglot\""
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "TableCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "arguments": {
                    "type": "TableConstructorExpression",
                    "fields": [
                      {
                        "type": "TableValue",
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"neoclide/coc.nvim\""
                        }
                      },
                      {
                        "type": "TableKeyString",
                        "key": {
                          "type": "Identifier",
                          "name": "branch"
                        },
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"release\""
                        }
                      },
                      {
                        "type": "TableKeyString",
                        "key": {
                          "type": "Identifier",
                          "name": "run"
                        },
                        "value": {
                          "type": "FunctionDeclaration",
                          "identifier": null,
                          "isLocal": false,
                          "parameters": [],
                          "body": [
                            {
                              "type": "CallStatement",
                              "expression": {
                                "type": "CallExpression",
                                "base": {
                                  "type": "IndexExpression",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "fn"
                                  },
                                  "index": {
                                    "type": "StringLiteral",
                                    "value": null,
                                    "raw": "\"coc#util#install\""
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "NumericLiteral",
                                    "value": 0,
                                    "raw": "0"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "TableCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "arguments": {
                    "type": "TableConstructorExpression",
                    "fields": [
                      {
                        "type": "TableValue",
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"vim-airline/vim-airline-themes\""
                        }
                      },
                      {
                        "type": "TableKeyString",
                        "key": {
                          "type": "Identifier",
                          "name": "commit"
                        },
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"571a9308c0aed6a690f25194461b2eada81f6b57\""
                        }
                      }
                    ]
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "TableCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "arguments": {
                    "type": "TableConstructorExpression",
                    "fields": [
                      {
                        "type": "TableValue",
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"chriskempson/base16-vim\""
                        }
                      },
                      {
                        "type": "TableKeyString",
                        "key": {
                          "type": "Identifier",
                          "name": "commit"
                        },
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"6191622d5806d4448fa2285047936bdcee57a098\""
                        }
                      }
                    ]
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "TableCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "arguments": {
                    "type": "TableConstructorExpression",
                    "fields": [
                      {
                        "type": "TableValue",
                        "value": {
                          "type": "StringLiteral",
                          "value": null,
                          "raw": "\"ap/vim-css-color\""
                        }
                      },
                      {
                        "type": "TableKeyString",
                        "key": {
                          "type": "Identifier",
                          "name": "ft"
                        },
                        "value": {
                          "type": "TableConstructorExpression",
                          "fields": [
                            {
                              "type": "TableValue",
                              "value": {
                                "type": "StringLiteral",
                                "value": null,
                                "raw": "\"css\""
                              }
                            },
                            {
                              "type": "TableValue",
                              "value": {
                                "type": "StringLiteral",
                                "value": null,
                                "raw": "\"scss\""
                              }
                            },
                            {
                              "type": "TableValue",
                              "value": {
                                "type": "StringLiteral",
                                "value": null,
                                "raw": "\"less\""
                              }
                            },
                            {
                              "type": "TableValue",
                              "value": {
                                "type": "StringLiteral",
                                "value": null,
                                "raw": "\"html\""
                              }
                            },
                            {
                              "type": "TableValue",
                              "value": {
                                "type": "StringLiteral",
                                "value": null,
                                "raw": "\"jsx\""
                              }
                            },
                            {
                              "type": "TableValue",
                              "value": {
                                "type": "StringLiteral",
                                "value": null,
                                "raw": "\"tsx\""
                              }
                            },
                            {
                              "type": "TableValue",
                              "value": {
                                "type": "StringLiteral",
                                "value": null,
                                "raw": "\"vue\""
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              },
              {
                "type": "CallStatement",
                "expression": {
                  "type": "StringCallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "use"
                  },
                  "argument": {
                    "type": "StringLiteral",
                    "value": null,
                    "raw": "\"ryanoasis/vim-devicons\""
                  }
                }
              }
            ]
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"highlight TermCursor ctermfg=red guifg=red\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set splitbelow\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set splitright\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set hid\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set ruler\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set number\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set wrap\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set linebreak\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set nolist\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set textwidth=120\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set cursorline\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set lazyredraw\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set showmode\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set showcmd\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set showmatch\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set showtabline=2\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set autoread\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set mouse=a\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set tabstop=2\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set shiftwidth=2\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set softtabstop=2\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set expandtab\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set smartindent\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set hidden\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set noswapfile\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set noshowmode\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set clipboard=unnamed\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set clipboard+=unnamedplus\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set incsearch\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set hlsearch\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set smartcase\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set ignorecase\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set wildignore+=*/tmp/*\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set undodir=~/.vim/tmp\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set undofile\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set undolevels=1000\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set undoreload=10000\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set backupdir=~/.vim/tmp\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set directory=~/.vim/tmp\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"filetype plugin indent on\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"syntax enable\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "..",
            "left": {
              "type": "StringLiteral",
              "value": null,
              "raw": "\"silent! colorscheme \""
            },
            "right": {
              "type": "MemberExpression",
              "indexer": ".",
              "identifier": {
                "type": "Identifier",
                "name": "THEME_DASH"
              },
              "base": {
                "type": "MemberExpression",
                "indexer": ".",
                "identifier": {
                  "type": "Identifier",
                  "name": "env"
                },
                "base": {
                  "type": "Identifier",
                  "name": "vim"
                }
              }
            }
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set background=dark\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"hi Directory guifg=#66D9EF ctermfg=red\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"hi Normal guibg=NONE ctermbg=NONE\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"hi NonText ctermbg=none\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set termguicolors\""
          }
        ]
      }
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "airline_theme"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "THEME"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "env"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "airline_powerline_fonts"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 1,
          "raw": "1"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "IndexExpression",
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          },
          "index": {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"airline#extensions#tabline#enabled\""
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 1,
          "raw": "1"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "webdevicons_enable_airline_statusline_fileformat_symbols"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 0,
          "raw": "0"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "terminal_scrollback_buffer_size"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 1000000,
          "raw": "1000000"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "mapleader"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "StringLiteral",
          "value": null,
          "raw": "\" \""
        }
      ]
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"autocmd BufNewFile,BufRead *.marko set filetype=marko.html\""
          }
        ]
      }
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "closetag_filenames"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "StringLiteral",
          "value": null,
          "raw": "\"*.html,*.xhtml,*.phtml,*.jsx,*.tsx,*.vue\""
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "name": "tc"
      },
      "isLocal": true,
      "parameters": [
        {
          "type": "Identifier",
          "name": "str"
        }
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "arguments": [
            {
              "type": "CallExpression",
              "base": {
                "type": "MemberExpression",
                "indexer": ".",
                "identifier": {
                  "type": "Identifier",
                  "name": "nvim_replace_termcodes"
                },
                "base": {
                  "type": "MemberExpression",
                  "indexer": ".",
                  "identifier": {
                    "type": "Identifier",
                    "name": "api"
                  },
                  "base": {
                    "type": "Identifier",
                    "name": "vim"
                  }
                }
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "str"
                },
                {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                },
                {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                },
                {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "name": "check_back_space"
      },
      "isLocal": true,
      "parameters": [],
      "body": [
        {
          "type": "LocalStatement",
          "variables": [
            {
              "type": "Identifier",
              "name": "col"
            }
          ],
          "init": [
            {
              "type": "IndexExpression",
              "base": {
                "type": "CallExpression",
                "base": {
                  "type": "MemberExpression",
                  "indexer": ".",
                  "identifier": {
                    "type": "Identifier",
                    "name": "nvim_win_get_cursor"
                  },
                  "base": {
                    "type": "MemberExpression",
                    "indexer": ".",
                    "identifier": {
                      "type": "Identifier",
                      "name": "api"
                    },
                    "base": {
                      "type": "Identifier",
                      "name": "vim"
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "NumericLiteral",
                    "value": 0,
                    "raw": "0"
                  }
                ]
              },
              "index": {
                "type": "NumericLiteral",
                "value": 2,
                "raw": "2"
              }
            }
          ]
        },
        {
          "type": "ReturnStatement",
          "arguments": [
            {
              "type": "LogicalExpression",
              "operator": "and",
              "left": {
                "type": "LogicalExpression",
                "operator": "or",
                "left": {
                  "type": "BinaryExpression",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "col"
                  },
                  "right": {
                    "type": "NumericLiteral",
                    "value": 0,
                    "raw": "0"
                  }
                },
                "right": {
                  "type": "CallExpression",
                  "base": {
                    "type": "MemberExpression",
                    "indexer": ":",
                    "identifier": {
                      "type": "Identifier",
                      "name": "match"
                    },
                    "base": {
                      "type": "CallExpression",
                      "base": {
                        "type": "MemberExpression",
                        "indexer": ":",
                        "identifier": {
                          "type": "Identifier",
                          "name": "sub"
                        },
                        "base": {
                          "type": "CallExpression",
                          "base": {
                            "type": "MemberExpression",
                            "indexer": ".",
                            "identifier": {
                              "type": "Identifier",
                              "name": "nvim_get_current_line"
                            },
                            "base": {
                              "type": "MemberExpression",
                              "indexer": ".",
                              "identifier": {
                                "type": "Identifier",
                                "name": "api"
                              },
                              "base": {
                                "type": "Identifier",
                                "name": "vim"
                              }
                            }
                          },
                          "arguments": []
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "col"
                        },
                        {
                          "type": "Identifier",
                          "name": "col"
                        }
                      ]
                    }
                  },
                  "arguments": [
                    {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"%s\""
                    }
                  ]
                }
              },
              "right": {
                "type": "BooleanLiteral",
                "value": true,
                "raw": "true"
              }
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "MemberExpression",
        "indexer": ".",
        "identifier": {
          "type": "Identifier",
          "name": "smart_tab"
        },
        "base": {
          "type": "Identifier",
          "name": "_G"
        }
      },
      "isLocal": false,
      "parameters": [],
      "body": [
        {
          "type": "IfStatement",
          "clauses": [
            {
              "type": "IfClause",
              "condition": {
                "type": "BinaryExpression",
                "operator": "==",
                "left": {
                  "type": "CallExpression",
                  "base": {
                    "type": "MemberExpression",
                    "indexer": ".",
                    "identifier": {
                      "type": "Identifier",
                      "name": "pumvisible"
                    },
                    "base": {
                      "type": "Identifier",
                      "name": "fn"
                    }
                  },
                  "arguments": []
                },
                "right": {
                  "type": "NumericLiteral",
                  "value": 1,
                  "raw": "1"
                }
              },
              "body": [
                {
                  "type": "ReturnStatement",
                  "arguments": [
                    {
                      "type": "StringCallExpression",
                      "base": {
                        "type": "Identifier",
                        "name": "tc"
                      },
                      "argument": {
                        "type": "StringLiteral",
                        "value": null,
                        "raw": "\"<C-n>\""
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "IfStatement",
          "clauses": [
            {
              "type": "IfClause",
              "condition": {
                "type": "BinaryExpression",
                "operator": "==",
                "left": {
                  "type": "CallExpression",
                  "base": {
                    "type": "Identifier",
                    "name": "check_back_space"
                  },
                  "arguments": []
                },
                "right": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              },
              "body": [
                {
                  "type": "ReturnStatement",
                  "arguments": [
                    {
                      "type": "StringCallExpression",
                      "base": {
                        "type": "Identifier",
                        "name": "tc"
                      },
                      "argument": {
                        "type": "StringLiteral",
                        "value": null,
                        "raw": "\"<TAB>\""
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "ReturnStatement",
          "arguments": [
            {
              "type": "CallExpression",
              "base": {
                "type": "IndexExpression",
                "base": {
                  "type": "Identifier",
                  "name": "fn"
                },
                "index": {
                  "type": "StringLiteral",
                  "value": null,
                  "raw": "\"coc#refresh\""
                }
              },
              "arguments": []
            }
          ]
        }
      ]
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"i\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<TAB>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"v:lua.smart_tab()\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": [
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "expr"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              },
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "noremap"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "MemberExpression",
        "indexer": ".",
        "identifier": {
          "type": "Identifier",
          "name": "smart_shift_tab"
        },
        "base": {
          "type": "Identifier",
          "name": "_G"
        }
      },
      "isLocal": false,
      "parameters": [],
      "body": [
        {
          "type": "IfStatement",
          "clauses": [
            {
              "type": "IfClause",
              "condition": {
                "type": "BinaryExpression",
                "operator": "==",
                "left": {
                  "type": "CallExpression",
                  "base": {
                    "type": "MemberExpression",
                    "indexer": ".",
                    "identifier": {
                      "type": "Identifier",
                      "name": "pumvisible"
                    },
                    "base": {
                      "type": "Identifier",
                      "name": "fn"
                    }
                  },
                  "arguments": []
                },
                "right": {
                  "type": "NumericLiteral",
                  "value": 1,
                  "raw": "1"
                }
              },
              "body": [
                {
                  "type": "ReturnStatement",
                  "arguments": [
                    {
                      "type": "StringCallExpression",
                      "base": {
                        "type": "Identifier",
                        "name": "tc"
                      },
                      "argument": {
                        "type": "StringLiteral",
                        "value": null,
                        "raw": "\"<C-p>\""
                      }
                    }
                  ]
                }
              ]
            },
            {
              "type": "ElseClause",
              "body": [
                {
                  "type": "ReturnStatement",
                  "arguments": [
                    {
                      "type": "StringCallExpression",
                      "base": {
                        "type": "Identifier",
                        "name": "tc"
                      },
                      "argument": {
                        "type": "StringLiteral",
                        "value": null,
                        "raw": "\"<C-h>\""
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"i\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<S-TAB>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"v:lua.smart_shift_tab()\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": [
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "expr"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              },
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "noremap"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "ale_fix_on_save"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 1,
          "raw": "1"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "IndexExpression",
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          },
          "index": {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"airline#extensions#ale#enabled\""
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 1,
          "raw": "1"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "ale_sql_pgformatter_options"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "StringLiteral",
          "value": null,
          "raw": "\"-U 2 -u 2 -s 2\""
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "ale_fixers"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "TableConstructorExpression",
          "fields": [
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "go"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"gofmt\""
                    }
                  },
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"goimports\""
                    }
                  }
                ]
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "javascript"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"eslint\""
                    }
                  }
                ]
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "lua"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"luafmt\""
                    }
                  }
                ]
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "nix"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"nixpkgs-fmt\""
                    }
                  }
                ]
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "python"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"black\""
                    }
                  },
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"isort\""
                    }
                  }
                ]
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "scss"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"stylelint\""
                    }
                  }
                ]
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "sql"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"pgformatter\""
                    }
                  }
                ]
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "terraform"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"terraform\""
                    }
                  }
                ]
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "typescript"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"eslint\""
                    }
                  }
                ]
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "typescriptreact"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"eslint\""
                    }
                  }
                ]
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "vue"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"eslint\""
                    }
                  },
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"stylelint\""
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "ale_linters"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "TableConstructorExpression",
          "fields": [
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "go"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"golangci-lint\""
                    }
                  },
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"gofmt\""
                    }
                  }
                ]
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "javascript"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"eslint\""
                    }
                  }
                ]
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "lua"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"luacheck\""
                    }
                  }
                ]
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "python"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"pylint\""
                    }
                  }
                ]
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "scss"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"stylelint\""
                    }
                  }
                ]
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "typescript"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"eslint\""
                    }
                  }
                ]
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "typescriptreact"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"eslint\""
                    }
                  }
                ]
              }
            },
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "vue"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"eslint\""
                    }
                  },
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"stylelint\""
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "ale_linter_aliases"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "TableConstructorExpression",
          "fields": [
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "vue"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"vue\""
                    }
                  },
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"typescript\""
                    }
                  },
                  {
                    "type": "TableValue",
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"scss\""
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"autocmd FileType gitcommit setlocal spell\""
          }
        ]
      }
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "ctrlsf_ackprg"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "StringLiteral",
          "value": null,
          "raw": "\"rg\""
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "ctrlsf_auto_focus"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "TableConstructorExpression",
          "fields": [
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "at"
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"start\""
              }
            }
          ]
        }
      ]
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"set wildignore+=*/node_modules/*\""
          }
        ]
      }
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "IndexExpression",
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          },
          "index": {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"incsearch#auto_nohlsearch\""
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 1,
          "raw": "1"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "NERDSpaceDelims"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 1,
          "raw": "1"
        }
      ]
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\\\\\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\":NERDTreeTabsToggle<CR>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "NERDTreeShowHidden"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 1,
          "raw": "1"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nerdtree_tabs_synchronize_view"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 0,
          "raw": "0"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nerdtree_tabs_focus_on_files"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 1,
          "raw": "1"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "AutoPairsMultilineClose"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 1,
          "raw": "1"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "IndexExpression",
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          },
          "index": {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"echodoc#enable_at_startup\""
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 1,
          "raw": "1"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "vue_disable_pre_processors"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 1,
          "raw": "1"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "vim_json_syntax_conceal"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 0,
          "raw": "0"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "ale_go_golangci_lint_options"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "StringLiteral",
          "value": null,
          "raw": "\"\""
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "ale_go_golangci_lint_package"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 1,
          "raw": "1"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "ale_rust_rls_config"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "b"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "TableConstructorExpression",
          "fields": [
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "rust"
              },
              "value": {
                "type": "TableConstructorExpression",
                "fields": [
                  {
                    "type": "TableKeyString",
                    "key": {
                      "type": "Identifier",
                      "name": "clippy_preference"
                    },
                    "value": {
                      "type": "StringLiteral",
                      "value": null,
                      "raw": "\"on\""
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "ale_rust_cargo_use_clippy"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 1,
          "raw": "1"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "ale_python_pylint_executable"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "StringLiteral",
          "value": null,
          "raw": "\"pipenv\""
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "ale_python_isort_auto_pipenv"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 1,
          "raw": "1"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "ale_python_black_auto_pipenv"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 1,
          "raw": "1"
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "mkdp_open_to_the_world"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "NumericLiteral",
          "value": 1,
          "raw": "1"
        }
      ]
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"autocmd FileType markdown setlocal spell\""
          }
        ]
      }
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "ale_lua_luafmt_options"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "StringLiteral",
          "value": null,
          "raw": "\"-i 2 -l 100\""
        }
      ]
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"v\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-X>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "'\"+x'"
          },
          {
            "type": "TableConstructorExpression",
            "fields": [
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "noremap"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"v\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-C>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "'\"+y'"
          },
          {
            "type": "TableConstructorExpression",
            "fields": [
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "noremap"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-V>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "'\"+gP'"
          },
          {
            "type": "TableConstructorExpression",
            "fields": [
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "noremap"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"v\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-V>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "'\"_dP'"
          },
          {
            "type": "TableConstructorExpression",
            "fields": [
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "noremap"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"i\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-V>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-r><C-o>+\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": [
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "noremap"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"n\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"d\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "'\"_d'"
          },
          {
            "type": "TableConstructorExpression",
            "fields": [
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "noremap"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"v\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"d\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "'\"_d'"
          },
          {
            "type": "TableConstructorExpression",
            "fields": [
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "noremap"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<S-T>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\":tabnew<CR>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<S-H>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\":tabp<CR>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<S-L>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\":tabn<CR>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<S-T>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\":tabnew<CR>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<S-W>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\":bw!<CR>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Leader><S-W>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\":BW<CR>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Leader><S-H>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\":BB<CR>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Leader><S-L>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\":BF<CR>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"n\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-J>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-W><C-J>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": [
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "noremap"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"n\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-K>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-W><C-K>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": [
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "noremap"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"n\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-L>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-W><C-L>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": [
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "noremap"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"n\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-H>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-W><C-H>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": [
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "noremap"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"n\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<BS>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-W>h\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"t\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Esc>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-\\\\><C-n>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": [
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "noremap"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Leader>[\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\":Term<CR>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Leader>]\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\":VTerm<CR>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Leader>\\\\\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\":term<CR>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Leader>f\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Plug>(easymotion-bd-f)\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"n\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Esc><Esc>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\":<C-u>nohlsearch<CR>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": [
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "noremap"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"n\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Plug>(incsearch-nohl-n)\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"N\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Plug>(incsearch-nohl-N)\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Leader>/\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Plug>NERDCommenterToggle\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-S>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Plug>CtrlSFPrompt\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<C-P>\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\":FZF<CR>\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "fzf_preview_window"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "TableConstructorExpression",
          "fields": []
        }
      ]
    },
    {
      "type": "AssignmentStatement",
      "variables": [
        {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "fzf_layout"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "g"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        }
      ],
      "init": [
        {
          "type": "TableConstructorExpression",
          "fields": [
            {
              "type": "TableKeyString",
              "key": {
                "type": "Identifier",
                "name": "down"
              },
              "value": {
                "type": "StringLiteral",
                "value": null,
                "raw": "\"40%\""
              }
            }
          ]
        }
      ]
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"n\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"K\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\":call CocAction('doHover')\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": [
              {
                "type": "TableKeyString",
                "key": {
                  "type": "Identifier",
                  "name": "noremap"
                },
                "value": {
                  "type": "BooleanLiteral",
                  "value": true,
                  "raw": "true"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"n\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"gd\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Plug>(coc-definition)\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"n\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"gy\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Plug>(coc-type-definition)\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"n\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"gi\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Plug>(coc-implementation)\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "nvim_set_keymap"
          },
          "base": {
            "type": "MemberExpression",
            "indexer": ".",
            "identifier": {
              "type": "Identifier",
              "name": "api"
            },
            "base": {
              "type": "Identifier",
              "name": "vim"
            }
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"n\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"gr\""
          },
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"<Plug>(coc-references)\""
          },
          {
            "type": "TableConstructorExpression",
            "fields": []
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"command PrettyJson :%!jq .\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"command PrettyXml :%!python -c 'import sys;import xml.dom.minidom;s=sys.stdin.read();print xml.dom.minidom.parseString(s).toprettyxml()'\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"command MinifyJson :%!jq -r -c .\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"command MinifyXml :%!minify --type=xml\""
          }
        ]
      }
    },
    {
      "type": "CallStatement",
      "expression": {
        "type": "CallExpression",
        "base": {
          "type": "MemberExpression",
          "indexer": ".",
          "identifier": {
            "type": "Identifier",
            "name": "cmd"
          },
          "base": {
            "type": "Identifier",
            "name": "vim"
          }
        },
        "arguments": [
          {
            "type": "StringLiteral",
            "value": null,
            "raw": "\"command Sudow :w !sudo tee %\""
          }
        ]
      }
    }
  ],
  "comments": [
    {
      "type": "Comment",
      "value": " Packer commands",
      "raw": "-- Packer commands"
    },
    {
      "type": "Comment",
      "value": " Defaults",
      "raw": "-- Defaults"
    },
    {
      "type": "Comment",
      "value": " Syntaxes",
      "raw": "-- Syntaxes"
    },
    {
      "type": "Comment",
      "value": " Autocomplte",
      "raw": "-- Autocomplte"
    },
    {
      "type": "Comment",
      "value": " Themes",
      "raw": "-- Themes"
    },
    {
      "type": "Comment",
      "value": " Post",
      "raw": "-- Post"
    },
    {
      "type": "Comment",
      "value": " Window split settings, colors too",
      "raw": "-- Window split settings, colors too"
    },
    {
      "type": "Comment",
      "value": " Editor",
      "raw": "-- Editor"
    },
    {
      "type": "Comment",
      "value": " This did something that makes terminal buffers fast",
      "raw": "-- This did something that makes terminal buffers fast"
    },
    {
      "type": "Comment",
      "value": " Show the line and column number of the cursor position, separated by a comma",
      "raw": "-- Show the line and column number of the cursor position, separated by a comma"
    },
    {
      "type": "Comment",
      "value": " show line numbers",
      "raw": "-- show line numbers"
    },
    {
      "type": "Comment",
      "value": " Wrap long line, don't break words",
      "raw": "-- Wrap long line, don't break words"
    },
    {
      "type": "Comment",
      "value": " max text width (will force new line)",
      "raw": "-- max text width (will force new line)"
    },
    {
      "type": "Comment",
      "value": " highlight current line",
      "raw": "-- highlight current line"
    },
    {
      "type": "Comment",
      "value": " show the current mode",
      "raw": "-- show the current mode"
    },
    {
      "type": "Comment",
      "value": " show last command",
      "raw": "-- show last command"
    },
    {
      "type": "Comment",
      "value": " Highlight matching bracket when cursor is on one of them",
      "raw": "-- Highlight matching bracket when cursor is on one of them"
    },
    {
      "type": "Comment",
      "value": " Always show tabline",
      "raw": "-- Always show tabline"
    },
    {
      "type": "Comment",
      "value": " Read file changes from disk",
      "raw": "-- Read file changes from disk"
    },
    {
      "type": "Comment",
      "value": " Mouse text hightlighting",
      "raw": "-- Mouse text hightlighting"
    },
    {
      "type": "Comment",
      "value": " Don't nag about unwritten changes",
      "raw": "-- Don't nag about unwritten changes"
    },
    {
      "type": "Comment",
      "value": " Disable another annoying message. Don't forget to save your work often!",
      "raw": "-- Disable another annoying message. Don't forget to save your work often!"
    },
    {
      "type": "Comment",
      "value": " Mode is already visible in airline.",
      "raw": "-- Mode is already visible in airline."
    },
    {
      "type": "Comment",
      "value": " Searching",
      "raw": "-- Searching"
    },
    {
      "type": "Comment",
      "value": " search as characters are entered",
      "raw": "-- search as characters are entered"
    },
    {
      "type": "Comment",
      "value": " highligh search results",
      "raw": "-- highligh search results"
    },
    {
      "type": "Comment",
      "value": " smart casing search",
      "raw": "-- smart casing search"
    },
    {
      "type": "Comment",
      "value": " Ignore case when searching ...",
      "raw": "-- Ignore case when searching ..."
    },
    {
      "type": "Comment",
      "value": " Undo",
      "raw": "-- Undo"
    },
    {
      "type": "Comment",
      "value": " Theme",
      "raw": "-- Theme"
    },
    {
      "type": "Comment",
      "value": " Terminal",
      "raw": "-- Terminal"
    },
    {
      "type": "Comment",
      "value": " Preset syntaxes",
      "raw": "-- Preset syntaxes"
    },
    {
      "type": "Comment",
      "value": " Closing tags",
      "raw": "-- Closing tags"
    },
    {
      "type": "Comment",
      "value": " Autocomplete configs",
      "raw": "-- Autocomplete configs"
    },
    {
      "type": "Comment",
      "value": " Handles taking in Vim key combo codes and converitng them to work from Lua.",
      "raw": "-- Handles taking in Vim key combo codes and converitng them to work from Lua."
    },
    {
      "type": "Comment",
      "value": " Validates if the last key pressed was backspace and acts accordingly.",
      "raw": "-- Validates if the last key pressed was backspace and acts accordingly."
    },
    {
      "type": "Comment",
      "value": " If statements all feel funny.",
      "raw": "-- If statements all feel funny."
    },
    {
      "type": "Comment",
      "value": " Linter",
      "raw": "-- Linter"
    },
    {
      "type": "Comment",
      "value": " Git",
      "raw": "-- Git"
    },
    {
      "type": "Comment",
      "value": " CTRLSF",
      "raw": "-- CTRLSF"
    },
    {
      "type": "Comment",
      "value": " CtrlP",
      "raw": "-- CtrlP"
    },
    {
      "type": "Comment",
      "value": " IncSearch",
      "raw": "-- IncSearch"
    },
    {
      "type": "Comment",
      "value": " NerdComments",
      "raw": "-- NerdComments"
    },
    {
      "type": "Comment",
      "value": " NerdTree",
      "raw": "-- NerdTree"
    },
    {
      "type": "Comment",
      "value": " Autopair",
      "raw": "-- Autopair"
    },
    {
      "type": "Comment",
      "value": " Echodot",
      "raw": "-- Echodot"
    },
    {
      "type": "Comment",
      "value": " Javascript + Frameworks",
      "raw": "-- Javascript + Frameworks"
    },
    {
      "type": "Comment",
      "value": " JSON",
      "raw": "-- JSON"
    },
    {
      "type": "Comment",
      "value": " Go",
      "raw": "-- Go"
    },
    {
      "type": "Comment",
      "value": " Rust",
      "raw": "-- Rust"
    },
    {
      "type": "Comment",
      "value": " Python",
      "raw": "-- Python"
    },
    {
      "type": "Comment",
      "value": " Markdown",
      "raw": "-- Markdown"
    },
    {
      "type": "Comment",
      "value": " Lua",
      "raw": "-- Lua"
    },
    {
      "type": "Comment",
      "value": " Clipboard",
      "raw": "-- Clipboard"
    },
    {
      "type": "Comment",
      "value": " Cut",
      "raw": "-- Cut"
    },
    {
      "type": "Comment",
      "value": " Copy",
      "raw": "-- Copy"
    },
    {
      "type": "Comment",
      "value": " Paste",
      "raw": "-- Paste"
    },
    {
      "type": "Comment",
      "value": " Paste while selecting",
      "raw": "-- Paste while selecting"
    },
    {
      "type": "Comment",
      "value": " Paste while in insert mode.",
      "raw": "-- Paste while in insert mode."
    },
    {
      "type": "Comment",
      "value": " Delete in normal mode",
      "raw": "-- Delete in normal mode"
    },
    {
      "type": "Comment",
      "value": " Delete in select mode.",
      "raw": "-- Delete in select mode."
    },
    {
      "type": "Comment",
      "value": " Tab Management",
      "raw": "-- Tab Management"
    },
    {
      "type": "Comment",
      "value": " TODO add tab expand and collapse.",
      "raw": "-- TODO add tab expand and collapse."
    },
    {
      "type": "Comment",
      "value": " Window Management",
      "raw": "-- Window Management"
    },
    {
      "type": "Comment",
      "value": " Terminal Management",
      "raw": "-- Terminal Management"
    },
    {
      "type": "Comment",
      "value": " EasyMotion",
      "raw": "-- EasyMotion"
    },
    {
      "type": "Comment",
      "value": " IncSearch",
      "raw": "-- IncSearch"
    },
    {
      "type": "Comment",
      "value": " NERDCommenter",
      "raw": "-- NERDCommenter"
    },
    {
      "type": "Comment",
      "value": " CtrlSF",
      "raw": "-- CtrlSF"
    },
    {
      "type": "Comment",
      "value": " FZF",
      "raw": "-- FZF"
    },
    {
      "type": "Comment",
      "value": " Docs",
      "raw": "-- Docs"
    },
    {
      "type": "Comment",
      "value": " Custom commands.",
      "raw": "-- Custom commands."
    }
  ]
}
